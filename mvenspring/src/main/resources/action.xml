<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:util="http://www.springframework.org/schema/util"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd              
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd                 http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd                   
    http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.0.xsd">  
    
   <!-- @Controller注解的使用前提配置  详细解释见(注.txt 1. )-->  
   <mvc:annotation-driven />   
  <!--  <context:annotation-config/> -->  
   <!-- 对module包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能-->  
   <context:component-scan base-package="com.hjw.home"> 
   	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>  
   </context:component-scan>  
     
   <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />  
          
    <!-- 定义视图解析器，在视图模型前后添加前缀后缀 暂时只支持jsp后缀-->  
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/views/" /><!-- 路径前缀 -->  
        <property name="suffix" value=".jsp" /><!-- 后缀 -->  
    </bean>  
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/*"/>
    		<bean id="authorizationInterceptor" class="com.hjw.home.core.interceptor.AuthorizationInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>  
      
<!--     <bean id="multipartResolver" class="com.hjw.home.core.upload.CustomMultipartResolver"> -->
        <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    
    </bean>
</beans>  